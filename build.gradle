plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'jacoco'
    id 'org.sonarqube' version '2.7'
}

group 'com.example'
version '1.0-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = 'https://packages.confluent.io/maven/'
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    compile.exclude module: 'spring-boot-starter-logging'
}

sonarqube {
    properties {
        property 'sonar.host.url', 'http://127.0.0.1:9000/'
        property 'sonar.verbose', 'true'
        property 'sonar.sourceEncoding', 'UTF-8'
        property 'sonar.projectKey', 'javasparkexecutor'
        property 'sonar.projectName', 'JavaSparkExecutor'
        property 'sonar.projectDescription', 'Standalone Java Spark Application'
        property 'sonar.projectVersion', '1.0-SNAPSHOT'
    }
}

ext {
    junitPlatform = '1.6.2'
    sparkVersion = '2.4.6'
    scalaVersion = '2.11'
    kafkaVersion = '5.1.1'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    implementation "org.apache.spark:spark-sql_${scalaVersion}:${sparkVersion}"
    implementation "org.apache.spark:spark-avro_${scalaVersion}:${sparkVersion}"
    implementation "org.apache.spark:spark-sql-kafka-0-10_${scalaVersion}:${sparkVersion}"
    implementation "io.confluent:kafka-avro-serializer:${kafkaVersion}"
    implementation "io.confluent:kafka-schema-registry:${kafkaVersion}"
    implementation 'org.codehaus.janino:janino:3.0.8'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation "org.junit.platform:junit-platform-runner:${junitPlatform}"
    testImplementation "io.confluent:kafka-schema-registry:${kafkaVersion}:tests"
    testImplementation "org.apache.kafka:kafka_${scalaVersion}:2.1.1:test"
    testImplementation "org.apache.kafka:kafka-clients:2.1.1:test"
    testImplementation 'org.apache.curator:curator-test:2.6.0'
}

test {
    useJUnitPlatform()
}
